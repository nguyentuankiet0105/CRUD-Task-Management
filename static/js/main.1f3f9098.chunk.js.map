{"version":3,"sources":["layout/Header.js","layout/Footer.js","components/TodoItem.js","layout/Body.js","layout/Content.js","screen/Home.js","App.js","Reducer/taskReducer.js","Store/taskStore.js","index.js"],"names":["Header","Layout","className","theme","mode","defaultSelectedKeys","type","to","placeholder","id","Footer","defaultCurrent","total","TodoItem","props","index","title","creator","status","moment","deadline","format","description","onClick","handleEditStatus","handleDelete","LIST_TASK","Body","useSelector","state","task","listTask","useDispatch","Form","useForm","form","React","Date","formValue","setFormValue","setListTask","indexEditing","setIndexEditing","list","localStorage","getItem","JSON","parse","setItem","stringify","handleOnChange","e","target","name","value","addTask","alert","handleSaveTask","trim","splice","renderByStatus","console","log","length","map","item","window","confirm","reset","exact","path","layout","onValuesChange","Item","label","onChange","date","disabledDate","current","endOf","disabled","icon","DownloadOutlined","SubMenu","Menu","Content","Sider","width","defaultOpenKeys","style","height","borderRight","LaptopOutlined","padding","margin","minHeight","Home","App","taskReducer","createSlice","initialState","reducers","addNewTask","action","push","payload","actions","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.1f3f9098.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Button, Input } from 'antd';\r\nimport '../Style/Header.css';\r\n\r\nconst Header = () => {\r\n  const { Header } = Layout;\r\n  return (\r\n    <Layout>\r\n      <Header className=\"header\">\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n          <Button type=\"primary\" className=\"hd_btn\">\r\n            <Link to=\"/home\">Create New Tasks</Link>\r\n          </Button>\r\n          <Input placeholder=\"input search text\" id='hd_ipt'/>\r\n          <Button type=\"primary\" className=\"hd_btn\">Search</Button>\r\n        </Menu>\r\n      </Header>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Header;\r\n","import * as React from 'react';\r\nimport { Pagination } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport '../Style/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <Pagination defaultCurrent={1} total={50} />\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Footer","import * as React from 'react'\r\nimport moment from 'moment';\r\n\r\nimport '../Style/TodoItem.css'\r\n\r\nconst TodoItem = (props, { index }) => {\r\n\r\n    return (\r\n        <div id='task'>\r\n            <div className='content'>\r\n                <h3>Title: {props.title}</h3> \r\n                <p className='content-creator'>Creator: {props.creator}</p>\r\n                <p className='stt' id={props.status}>Status: <span id='stt-spn'>{props.status}</span></p>\r\n                <p className='stt'>Deadline: {moment(props.deadline).format('DD/MM/YYYY')}</p>\r\n                <hr/>\r\n                <h4>Description:</h4>\r\n                <p> {props.description}</p>\r\n            </div>\r\n            <div className='status'>\r\n                    <button id='edit' onClick={props.handleEditStatus}>Edit</button> \r\n                    <button id='delete' onClick={props.handleDelete}> Delete</button>\r\n                </div>\r\n        </div >\r\n    );\r\n}\r\nexport default TodoItem","import * as React from 'react';\r\nimport { Button, Input, Form, DatePicker, Radio } from 'antd';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TodoItem from '../components/TodoItem';\r\nimport '../Style/Body.css';\r\n\r\nconst LIST_TASK = 'listTask';\r\n\r\nconst Body = () => {\r\n  const listTaskRedux = useSelector((state) => {\r\n    return state.task.listTask;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [form] = Form.useForm();\r\n  const [formValue, setFormValue] = React.useState({\r\n    title: '',\r\n    creator: '',\r\n    description: '',\r\n    deadline: new Date(),\r\n  });\r\n  const [listTask, setListTask] = React.useState([]);\r\n  const [indexEditing, setIndexEditing] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    const list = localStorage.getItem(LIST_TASK);\r\n    if (list) {\r\n      setListTask(JSON.parse(list));\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(LIST_TASK, JSON.stringify(listTask));\r\n  }, [listTask]);\r\n\r\n  const handleOnChange = (e) => {\r\n    if (e.target) {\r\n      setFormValue({ ...formValue, [e.target.name]: e.target.value });\r\n    } else {\r\n      setFormValue({ ...formValue, deadline: e });\r\n    }\r\n  };\r\n  const addTask = () => {\r\n    return setListTask(\r\n      [\r\n        ...listTask,\r\n        {\r\n          title: formValue.title,\r\n          creator: formValue.creator,\r\n          description: formValue.description,\r\n          deadline: formValue.deadline,\r\n          status: 'new',\r\n        },\r\n      ],\r\n      setFormValue({...formValue, title:'', creator:'', description:'',}),\r\n      alert('you have added the task successfully!!!')\r\n    );\r\n  };\r\n\r\n  const handleSaveTask = () => {\r\n    if (listTask.trim()) {\r\n      const list = [\r\n        ...listTask,\r\n        {\r\n          title: formValue.title,\r\n          creator: formValue.creator,\r\n          description: formValue.description,\r\n          deadline: formValue.deadline,\r\n          status: 'new',\r\n        },\r\n      ];\r\n      localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n      setListTask(list);\r\n      setFormValue('');\r\n    } else {\r\n      setIndexEditing(null);\r\n    }\r\n  };\r\n\r\n  const handleEditStatus = (index) => {\r\n    const list = listTask;\r\n    list.splice(index, 1, {\r\n      ...list[index],\r\n      status: list[index].status === 'new' ? 'inprogress' : 'done',\r\n    });\r\n    localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n    setListTask([...list]);\r\n  };\r\n\r\n  const renderByStatus = (status) => {\r\n    console.log('listTask', listTask);\r\n    if (listTask.length) {\r\n      return listTask.map((item, index) => {\r\n        if (item.status !== status) return null;\r\n        return (\r\n          <TodoItem\r\n            key={index}\r\n            {...item}\r\n            handleEditStatus={() => handleEditStatus(index)}\r\n            handleDelete={() => {\r\n              const isDelete = window.confirm('Bạn có muốn xóa task này không ?');\r\n              if (isDelete) {\r\n                const list = listTask;\r\n                list.splice(index, 1);\r\n                localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n                setListTask([...list]);\r\n              }\r\n            }}\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return <h1 id=\"notask\">No Task In Here</h1>;\r\n    }\r\n  };\r\n  const renderAllTask = () => {\r\n    if (listTask.length) {\r\n      return listTask.map((item, index) => {\r\n        return (\r\n          <TodoItem\r\n            key={index}\r\n            {...item}\r\n            handleEditStatus={() => handleEditStatus(index)}\r\n            handleDelete={() => {\r\n              const isDelete = window.confirm('Bạn có muốn xóa task này không ?');\r\n              if (isDelete) {\r\n                const list = listTask;\r\n                list.splice(index, 1);\r\n                localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n                setListTask([...list]);\r\n              }\r\n            }}\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return <h1 id=\"notask\">No Task In Here</h1>;\r\n    }\r\n  };\r\n  const reset = () => {\r\n    const isDelete = window.confirm('Bạn có muốn xóa tất cả task không ?');\r\n    if (isDelete) {\r\n      setListTask([]);\r\n      alert('Bạn đã xóa thành công !');\r\n    }\r\n  };\r\n  const renderAddForm = () => {\r\n    return (\r\n      <Form layout={'vertical'} form={form} onValuesChange={(e) => console.log(e)}>\r\n        <Form.Item label=\"Title\">\r\n          <Input\r\n            name=\"title\"\r\n            id=\"input\"\r\n            placeholder={\r\n              indexEditing ? listTask[indexEditing].title : 'Add title new tasks in here'\r\n            }\r\n            onChange={(e) => handleOnChange(e)}\r\n            value={formValue.title}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Creator\">\r\n          <Input\r\n            name=\"creator\"\r\n            id=\"input\"\r\n            placeholder={indexEditing ? listTask[indexEditing].creator : 'Add creator name in here'}\r\n            onChange={(e) => handleOnChange(e)}\r\n            value={formValue.creator}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Description\">\r\n          <Input\r\n            name=\"description\"\r\n            id=\"input\"\r\n            placeholder={\r\n              indexEditing ? listTask[indexEditing].title : '(Option) Add description tasks in here'\r\n            }\r\n            onChange={(e) => handleOnChange(e)}\r\n\r\n            value={formValue.description}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Deadline\">\r\n          <DatePicker\r\n            value={moment(formValue.deadline, 'DD/MM/YYYY')}\r\n            format={'DD/MM/YYYY'}\r\n            onChange={(date) => handleOnChange(date)}\r\n            disabledDate={(current) => current && current < moment().endOf('day')}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Radio>NEW</Radio>\r\n          <Radio>INPROGRESS</Radio>\r\n          <Radio>DONE</Radio>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {indexEditing ? (\r\n            <>\r\n              <Button type=\"ghost\" onClick={handleSaveTask}>\r\n                Save\r\n              </Button>\r\n              <Button type=\"dashed\" onClick={() => setIndexEditing(null)}>\r\n                Cancel\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                type=\"primary\"\r\n                disabled={(!formValue.title, !formValue.creator)}\r\n                icon={<DownloadOutlined />}\r\n                onClick={addTask}\r\n              >\r\n                Add New Task\r\n              </Button>\r\n              <Button type=\"primary\" onClick={reset}>\r\n                Reset\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Form.Item>\r\n        <p>* you must fill in Title Input and Creator Input.</p>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"content\">\r\n      <Switch>\r\n        <Route exact path=\"/inprogress\">\r\n          {renderByStatus('inprogress')}\r\n        </Route>\r\n        <Route exact path=\"/done\">\r\n          {renderByStatus('done')}\r\n        </Route>\r\n        <Route exact path=\"/all\">\r\n          {renderAllTask()}\r\n        </Route>\r\n        <Route exact path=\"/home\">\r\n          {renderAddForm()}\r\n        </Route>\r\n        <Route path=\"/\">{renderByStatus('new')}</Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default Body;\r\n","import { Link } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport {  LaptopOutlined } from '@ant-design/icons';\r\nimport Body from '../layout/Body';\r\nimport \"../Style/content.css\"\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst Content = () => {\r\n  const { Content, Sider } = Layout;\r\n\r\n  return (\r\n    <Layout  id='content'> \r\n      <Sider width={200} className=\"site-layout-background\">\r\n        <Menu\r\n          mode=\"inline\"\r\n          defaultSelectedKeys={['1']}\r\n          defaultOpenKeys={['sub1']}\r\n          style={{ height: '100%', borderRight: 0}}\r\n        >\r\n          <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Task Control\">\r\n            <ul className=\"app-list\">\r\n              <hr />\r\n              <li>\r\n                <Link to=\"/all\">All Task</Link>\r\n              </li>\r\n              <br /> <hr />\r\n              <li>\r\n                <Link to=\"/\">New Task</Link>\r\n              </li>\r\n              <br /> <hr />\r\n              <li>\r\n                <Link to=\"/inprogress\">Doing Task</Link>\r\n              </li>\r\n              <br /> <hr />\r\n              <li>\r\n                <Link to=\"/done\">Done Task</Link>\r\n              </li>\r\n              <br /> <hr />\r\n            </ul>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout style={{ padding: '0 24px 24px' }} >\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: 24,\r\n            margin: 0,\r\n            minHeight: 280,\r\n          }}\r\n        >\r\n          <Body />\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Content;\r\n","import * as React from 'react';\r\nimport Header from '../layout/Header';\r\nimport Footer from '../layout/Footer';\r\nimport Content from '../layout/Content';\r\n// import { makeAutoObservable } from 'mobx';\r\n// import { observer } from 'mobx-react';\r\n// import TimerStore from '../Store/index';\r\n\r\nimport '../Style/Home.css'; \r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Content/>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n// export default observer(Home);\r\nexport default Home;\r\n","import './App.css';\nimport Home from './screen/Home';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Home/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const taskReducer = createSlice({\r\n  name: 'task',\r\n  initialState: {\r\n    listTask: [\r\n      {\r\n        title: 'demo',\r\n        description: 'demo des',\r\n        deadline: new Date(),\r\n        status: 'new',\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addNewTask: (state, action) => {\r\n      console.log('state, action', state, action);\r\n      state.listTask.push(action.payload);\r\n    },\r\n    reset: (state, action) => {\r\n      state.listTask = [];\r\n    },\r\n  },\r\n});\r\nexport const { addNewTask, reset } = taskReducer.actions;\r\n\r\nexport default taskReducer.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport taskReducer from '../Reducer/taskReducer'\r\nexport default configureStore({\r\n  reducer: {\r\n    task: taskReducer,\r\n  }\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './Store/taskStore'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}